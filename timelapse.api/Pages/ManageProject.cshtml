@page "{projectId:int}"
@model timelapse.api.Pages.ManageProjectModel
@{
}

<script>
    function makeReq(Url, ErrorObject, Reload=true) {
        fetch(Url, {
            method: 'POST'
        })
        .then((response) => response.body)
        .then((body) => {
            const reader = body.getReader()
            reader.read().then(({done, value}) => {
                valueString = ''
                for (i=0; i<value.length; i++) {
                    valueString = valueString + String.fromCharCode(value[i])
                }
                if (valueString.startsWith('FAIL:'))
                {
                    ErrorObject.innerText = valueString
                } else if (valueString.startsWith('SUCCEED:'))
                {
                    if (Reload) {
                        location.reload()
                    }
                } else {
                    console.error('Server sent an invalid response:', valueString)
                }
            })
        })
        .catch(error => console.log('Unable to add user to organisation', error))
    }
</script>

<div class="row">
    <form method="post">
        <div class="form-group">
            <label asp-for="ProjectName"></label>
            <input asp-for="ProjectName" class="form-control" />
            <span asp-validation-for="ProjectName" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="ContainerOverideId">Container Overide (optional)</label>
            @* <input asp-for="ContainerOveride" class="form-control" /> *@
            <select id="containerOverideId" asp-for="ContainerOverideId" asp-items="Model.ContainerIds">
            </select>
            <span asp-validation-for="ContainerOverideId" class="text-danger"></span>
        </div>
        <div class="form-group">
            <input type="submit" value="Update" class="btn btn-primary" />
        </div>
    </form>
</div>

<div class="row">
    <h2> Cameras </h2>
    <table class="table">
        <thead>
            <th scope="col"> Device Name </th>
            <th scope="col"> Start Date </th>
            <th scope="col"> End Date </th>
        </thead>
        <tbody>
            @foreach (var deviceContract in Model.DeviceProjectContracts.Where(d => d.ProjectId == Model.ProjectId))
            {
                var device = Model.Devices.First(d => d.Id == deviceContract.DeviceId);

                <tr>
                    <td>
                        @* @Html.DisplayFor(m => deviceContract.Device.Name) *@
                        <a href="/DeviceEdit/@(device.Id)">@(deviceContract.Device.Name)</a>

                    </td>
                    <td>
                            <script type="text/javascript">localizeDateTime('@(deviceContract.StartDate.ToString("s"))')</script>
                    </td>
                    <td>
                            <script type="text/javascript">localizeDateTime('@(deviceContract.EndDate.HasValue?deviceContract.EndDate.Value.ToString("s"):"---")')</script>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div>
        @if (Model.DeviceProjectContracts.Count() == 0)
        {
            <p> No devices found </p>
        }
        <a href="/CreateCameraAllocation/@(Model.ProjectId)"> Allocate a camera </a>
    </div>
    <div>
        @* DEVDO this is a placeholder *@
        <button class="btn btn-primary" onclick="makeReq('/api/Project/AddMockDevice?ProjectId=@(Model.ProjectId)', document.getElementById('AddMockError'))"> Add mock device </button> <br>
        <label class="text-danger" id="AddMockError"></label>
    </div>

    <div>
        <a asp-page="/ManageOrganisation" asp-route-id="@(Model.RetOrganisationId)">Back to Organisation</a>
    </div>

</div>