@page "{numberOfHoursToDisplay:int?}"
@using Humanizer
@model DeviceTrendsModel
@{
    ViewData["Title"] = "Device Trends";
}

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns/dist/chartjs-adapter-date-fns.bundle.min.js"></script>

<div class="container">
  <div class="row">
    <div class="col">
        <h4>Displaying @(Model.NumberOfHoursToDisplay) hours data.</h4>
        @{
            <a href="/DeviceTrends/1" type="button" class="btn btn-secondary">Last hour</a>
            <a href="/DeviceTrends/24" type="button" class="btn btn-secondary">Last 24 hours</a>
            <a href="/DeviceTrends/48" type="button" class="btn btn-secondary">Last 48 hours</a>
            <a href="/DeviceTrends/168" type="button" class="btn btn-secondary">Last week</a>
        }
    </div>
  </div>
</div>



<script>
    const GetTelemetryBetweenDatesUri = '/api/Telemetry/GetTelemetryBetweenDates'

    function getTelemetry(deviceId, startDate, endDate, chart, deviceLabel) {
        fetch(GetTelemetryBetweenDatesUri + '?deviceId=' + deviceId + '&startDate=' + startDate + '&endDate=' + endDate)
            .then(response => response.json())
            .then(data => showTelemetry(chart, data, deviceId, deviceLabel))
            .catch(error => console.error('Unable to get telemetry.', error));
    }

    function showTelemetry(chart, data, deviceId, deviceLabel){

        const minVoltage = 2000
        const maxVoltage = 3600

        console.log("showTelemtery");
        console.log("deviceLabel:")
        console.log(deviceLabel)

        data = {
            @* labels: labels, *@
            datasets: [{
                label: deviceLabel + " Battery",
                backgroundColor: 'rgb(99, 99, 255)',
                borderColor: 'rgb(99, 99, 255)',
                yAxisID: 'y',
                data: data.map(d => ({x: new Date(d.timestamp), y: d.batteryPercent})),
            }]
        };

        chart.config.data.datasets = chart.config.data.datasets.concat(data.datasets)
        chart.update();
    }



    var previousDateString = null;
</script>

<div>
    <table class="table">
        <thead>
        </thead>
        <tbody>
            <tr>
                <td>
                    <canvas id="myChart"></canvas>

                    <script>

                        var config = {
                            type: 'line',
                            options: {
                                plugins: {
                                    legend: {
                                        @* display: false, *@
                                        position: 'bottom'
                                    }
                                },
                                scales: {
                                    x: {
                                            parsing: false,
                                            @* display: false, *@
                                            type: 'time',
                                            time: {
                                                unit: 'hour'
                                            },
                                            min: new Date(@(new DateTimeOffset(Model.StartDate).ToUnixTimeMilliseconds())),
                                            max: new Date(@(new DateTimeOffset(Model.EndDate).ToUnixTimeMilliseconds())),
                                    },
                                    y: {
                                            @* display: false, *@
                                            beginAtZero: true,
                                            position: 'left'
                                    },
                                    y1: {
                                            @* display: false, *@
                                            beginAtZero: false,
                                            position: 'right'
                                    }
                                },
                                elements: {
                                    line: {
                                        borderColor: '#000000',
                                        borderWidth: 1
                                    },
                                        point: {
                                            radius: 0
                                    } 
                                },
                                animation: false
                                @* responsive: false, *@
                            }
                        };

                        config.data={datasets: []};

                        const myChart = new Chart(
                            document.getElementById('myChart'),
                            config
                        );

                        @{foreach(var device in Model.Devices){
                            <text>
                                getTelemetry(@(device.Id), '@(Model.StartDate.ToUniversalTime().ToString("o"))', '@(Model.EndDate.ToUniversalTime().ToString("o"))', myChart, "@(device.Name)");
                            </text>
                        }}
                    </script>
                </td>
            </tr>
        </tbody>
    </table>
</div>

<div>
    <table class="table" id="devicePerformance">
        <thead>
            <th nowrap="nowrap">Device Name</th>
            <th nowrap="nowrap"><i class="fa fa-cog" data-toggle="tooltip" title="Support Mode"></i></th>
            <th nowrap="nowrap"><i class="fa fa-eye" data-toggle="tooltip" title="Monitoring Mode"></i></th>
            <th nowrap="nowrap"><i class="fa fa-wrench" data-toggle="tooltip" title="Service"></i></th>
            <th nowrap="nowrap"><i class="fa fa-moon" data-toggle="tooltip" title="Hibernate Mode"></i></th>
            <th nowrap="nowrap"><i class="fa fa-power-off" data-toggle="tooltip" title="Power Off"></i></th>
            <th nowrap="nowrap">Description</th>
            

            @{foreach(var date in Model.DateRange){
                <th nowrap="nowrap"><script type="text/javascript">
                    document.write(localizeDateTimeToShortDayAndNumber('@(date.ToString("s"))')); 
                    daytimeColumns.push(localizeDateTimeIsBetween6And6('@(date.ToString("s"))'));
                </script></th>
            }}
        </thead>
        <thead>
            <th nowrap="nowrap"></th>
            <th nowrap="nowrap"></th>
            <th nowrap="nowrap"></th>
            <th nowrap="nowrap"></th>
            <th nowrap="nowrap"></th>
            <th nowrap="nowrap"></th>
            <th nowrap="nowrap">Number of images and pending images</th>

            @{foreach(var date in Model.DateRange){
                <th nowrap="nowrap"><script type="text/javascript">document.write(localizeDateTimeToHourAndAmPm('@(date.ToString("s"))'));</script></th>
            }}
        </thead>
        <tbody>
            @{foreach(var summary in Model.PerformanceSummaries){
            <tr>
                <td nowrap="nowrap"><a href="/TelemetryGraph/@(summary.DeviceId)/@(Model.StartDate.ToUniversalTime().ToString("o"))/@(Model.EndDate.ToUniversalTime().ToString("o"))">@(summary.DeviceName)</a></td>

                <td nowrap="nowrap">
                    @if(summary.DeviceSupportMode){
                        <i class="fa fa-cog" data-toggle="tooltip" title="Support Mode"></i>
                    }
                </td>
                <td>
                    @if(summary.DeviceMonitoringMode){
                        <i class="fa fa-eye" data-toggle="tooltip" title="Monitoring Mode"></i>
                    }
                </td>
                <td>
                    @if(summary.DeviceService){
                        <i class="fa fa-wrench" data-toggle="tooltip" title="Service"></i>
                    }
                </td>
                <td>
                    @if(summary.DeviceHibernateMode){
                        <i class="fa fa-moon" data-toggle="tooltip" title="Hibernate Mode"></i>
                    }
                </td>
                <td>
                    @if(summary.DevicePowerOff){
                        <i class="fa fa-power-off" data-toggle="tooltip" title="Power Off"></i>
                    }
                </td>


                <td nowrap="nowrap">@(summary.DeviceDescription)</td>
                @{foreach(var details in summary.PerformanceDetails){
                    if(summary.DeviceService || summary.DevicePowerOff || summary.DeviceHibernateMode){
                        <td nowrap="nowrap" style="background-color: #999999;">@(details.TotalImages) P@(details.MaxPendingImages)</td>
                    } else {
                        if(details.TotalImages<30 || details.MaxPendingImages > 60){
                            <td nowrap="nowrap" style="background-color: #ff0000;">@(details.TotalImages) P@(details.MaxPendingImages)</td>
                        } else {
                            if(details.TotalImages<45 || details.MaxPendingImages > 45){
                                <td nowrap="nowrap" style="background-color: #ffcc00;">@(details.TotalImages) P@(details.MaxPendingImages)</td>
                            } else {
                                <td nowrap="nowrap">@(details.TotalImages)</td>
                            }
                        }                    
                    }
                }}
            </tr>
            }}
            <thead>
                @* <th nowrap="nowrap">Device Name</th> *@
                <th nowrap="nowrap"></th>
                <th nowrap="nowrap"><i class="fa fa-cog" data-toggle="tooltip" title="Support Mode"></i></th>
                <th nowrap="nowrap"><i class="fa fa-eye" data-toggle="tooltip" title="Monitoring Mode"></i></th>
                <th nowrap="nowrap"><i class="fa fa-wrench" data-toggle="tooltip" title="Service"></i></th>
                <th nowrap="nowrap"><i class="fa fa-moon" data-toggle="tooltip" title="Hibernate Mode"></i></th>
                <th nowrap="nowrap"><i class="fa fa-power-off" data-toggle="tooltip" title="Power Off"></i></th>
                @* <th nowrap="nowrap">Description</th> *@
                <th nowrap="nowrap"></th>
                

                @{foreach(var date in Model.DateRange){
                    <th nowrap="nowrap"><script type="text/javascript">
                        document.write(localizeDateTimeToShortDayAndNumber('@(date.ToString("s"))')); 
                        @* daytimeColumns.push(localizeDateTimeIsBetween6And6('@(date.ToString("s"))')); *@
                    </script></th>
                }}
            </thead>
            <thead>
                <th nowrap="nowrap"></th>
                <th nowrap="nowrap"></th>
                <th nowrap="nowrap"></th>
                <th nowrap="nowrap"></th>
                <th nowrap="nowrap"></th>
                <th nowrap="nowrap"></th>
                <th nowrap="nowrap">Number of images only</th>

                @{foreach(var date in Model.DateRange){
                    <th nowrap="nowrap"><script type="text/javascript">document.write(localizeDateTimeToHourAndAmPm('@(date.ToString("s"))'));</script></th>
                }}
            </thead>
            @{foreach(var summary in Model.PerformanceSummaries){
            <tr>
                <td nowrap="nowrap"><a href="/TelemetryGraph/@(summary.DeviceId)/@(Model.NumberOfHoursToDisplay)">@(summary.DeviceName)</a></td>

                <td nowrap="nowrap">
                    @if(summary.DeviceSupportMode){
                        <i class="fa fa-cog" data-toggle="tooltip" title="Support Mode"></i>
                    }
                </td>
                <td>
                    @if(summary.DeviceMonitoringMode){
                        <i class="fa fa-eye" data-toggle="tooltip" title="Monitoring Mode"></i>
                    }
                </td>
                <td>
                    @if(summary.DeviceService){
                        <i class="fa fa-wrench" data-toggle="tooltip" title="Service"></i>
                    }
                </td>
                <td>
                    @if(summary.DeviceHibernateMode){
                        <i class="fa fa-moon" data-toggle="tooltip" title="Hibernate Mode"></i>
                    }
                </td>
                <td>
                    @if(summary.DevicePowerOff){
                        <i class="fa fa-power-off" data-toggle="tooltip" title="Power Off"></i>
                    }
                </td>


                <td nowrap="nowrap">@(summary.DeviceDescription)</td>
                @{foreach(var details in summary.PerformanceDetails){
                    if(summary.DeviceService || summary.DevicePowerOff || summary.DeviceHibernateMode){
                        <td nowrap="nowrap" style="background-color: #999999;">@(details.TotalImages)</td>
                    } else {
                        if(details.TotalImages<30){
                            <td nowrap="nowrap" style="background-color: #ff0000;">@(details.TotalImages)</td>
                        } else {
                            if(details.TotalImages<45){
                                <td nowrap="nowrap" style="background-color: #ffcc00;">@(details.TotalImages)</td>
                            } else {
                                <td nowrap="nowrap">@(details.TotalImages)</td>
                            }
                        }                    
                    }
                }}
            </tr>
            <tr>
                <td nowrap="nowrap"></td>
                <td nowrap="nowrap"></td>
                <td nowrap="nowrap"></td>
                <td nowrap="nowrap"></td>
                <td nowrap="nowrap"></td>
                <td nowrap="nowrap"></td>
                <td nowrap="nowrap"></td>
                @{foreach(var details in summary.PerformanceDetails){

                    @if(details.FirstImage!=null){
                        if(summary.DeviceService || summary.DevicePowerOff || summary.DeviceHibernateMode){
                            <td nowrap="nowrap" style="background-color: #999999;">
                                <a href="/ImageView/@(summary.DeviceId)/1/@(details.FirstImage.Timestamp.ToUniversalTime().ToString("o"))"><img src="@(details.FirstImage.BlobUri + Model.SasToken)" width=100></img></a>
                            </td>
                        } else {
                            if(details.TotalImages<30){
                                <td style="background-color: #ff0000;">
                                    <a href="/ImageView/@(summary.DeviceId)/1/@(details.FirstImage.Timestamp.ToUniversalTime().ToString("o"))"><img src="@(details.FirstImage.BlobUri + Model.SasToken)" width=100></img></a>
                                </td>
                            } else {
                                if(details.TotalImages<45){
                                    <td style="background-color: #ffcc00;">
                                        <a href="/ImageView/@(summary.DeviceId)/1/@(details.FirstImage.Timestamp.ToUniversalTime().ToString("o"))"><img src="@(details.FirstImage.BlobUri + Model.SasToken)" width=100></img></a>
                                    </td>
                                } else {
                                    <td>
                                        <a href="/ImageView/@(summary.DeviceId)/1/@(details.FirstImage.Timestamp.ToUniversalTime().ToString("o"))"><img src="@(details.FirstImage.BlobUri + Model.SasToken)" width=100></img></a>
                                    </td>
                                }
                            }
                        }
                    } else {
                        <td></td>
                    }
                }}
            </tr>
            }}
        </tbody>
    </table>
</div>

<script>

    
    var rows = document.getElementById('devicePerformance').getElementsByTagName('tr');

    for (var i = 0; i < rows.length; i++) {

        var cells = rows[i].getElementsByTagName('th');
        for (var j = 7; j < cells.length; j++) {
            // Also clear out cells that show same day as previous
            var dateString = cells[j].innerText;
            if(previousDateString==dateString){
                cells[j].innerText='';
            } else {
                previousDateString=dateString;
            }
        }

        // check daytimeColumns and for all columns that are 'Night', remove cell highlighting
        var cells = rows[i].getElementsByTagName('td');
        for (var j = 7; j < cells.length; j++) {
            if(daytimeColumns[j]=='Night'){
                @* cells[j].style.display = 'none'; *@
                cells[j].style.backgroundColor= '#ffffff';
            }

            // We will likely not have a full hour's worth of data for latest hour - no point highlighting
            if(j==cells.length-1){
                cells[j].style.backgroundColor= '#ffffff';
            }
        }
    }
</script>