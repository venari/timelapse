@page "{OrganisationId:int}"
@model timelapse.api.Pages.CreateContainerModel
@{
    ViewData["Title"] = "Create Container";
}

<div class="row">
    <h4>Note, container must already exist in cloud service provider.</h4>
</div>
<div class="row">
    <form method="post">
        @* <div asp-validation-summary="All" class="text-danger"></div> *@
        <div class="form-group">
            <label asp-for="ContainerProvider"></label>
            @* <select id="container-providers" onchange="containerProviderChange()">
                @foreach (var containerProvider in Model.ContainerProviders){
                    if(Model.ContainerProvider!=null && Model.ContainerProvider==containerProvider){
                        <option selected value="@(containerProvider)">@(containerProvider.ToString())</option>
                    } else {
                        <option value="@(containerProvider)">@(containerProvider.ToString())</option>
                    }
                }
            </select> *@
            <select id="container-providers" asp-for="ContainerProvider" asp-items="Model.ContainerProviders" onchange="containerProviderChange()">
            </select>
            <span asp-validation-for="ContainerProvider" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="ContainerName"></label>
            <input asp-for="ContainerName" class="form-control" />
            <span asp-validation-for="ContainerName" class="text-danger"></span>
        </div>


        <fieldset id="azure-group">
            @* <div class="form-group">
                <label asp-for="StorageAccountName"></label>
                <input asp-for="StorageAccountName" class="form-control" />
                <span asp-validation-for="StorageAccountName" class="text-danger"></span>
            </div> *@
            <div class="form-group">
                <label asp-for="Azure_ConnectionString"></label>
                <input asp-for="Azure_ConnectionString" class="form-control" />
                <span asp-validation-for="Azure_ConnectionString" class="text-danger"></span>
            </div>


        </fieldset>


        <fieldset id="aws-group">
            <div class="form-group">
                <label asp-for="AWS_S3_Region"></label>
                <input asp-for="AWS_S3_Region" class="form-control" />
                <span asp-validation-for="AWS_S3_Region" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="AWS_S3_BucketName"></label>
                <input asp-for="AWS_S3_BucketName" class="form-control" />
                <span asp-validation-for="AWS_S3_BucketName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="AWS_S3_AccessKey"></label>
                <input asp-for="AWS_S3_AccessKey" class="form-control" />
                <span asp-validation-for="AWS_S3_AccessKey" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="AWS_S3_SecretKey"></label>
                <input type="password" asp-for="AWS_S3_SecretKey" class="form-control" />
                <span asp-validation-for="AWS_S3_SecretKey" class="text-danger"></span>
            </div>
        </fieldset>


        <div class="form-group">
            <input type="submit" value="Create" class="btn btn-primary">
        </div>
    </form>

    <div>
        <a asp-page="/ManageOrganisation" asp-route-id="@(Model.RetOrganisationId)">Back to Organisation</a>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
            function containerProviderChange(){

                var containerProvider = document.getElementById("container-providers").value;

                var azureGroup = document.getElementById("azure-group");
                var azureGroupControls = azureGroup.getElementsByTagName("input");

                for(var i=0;i<azureGroupControls.length;i++){
                    azureGroupControls[i].disabled = containerProvider!="@core.models.ContainerProvider.Azure_Blob";
                }


                var awsGroup = document.getElementById("aws-group");
                var awsGroupControls = awsGroup.getElementsByTagName("input");


                for(var i=0;i<awsGroupControls.length;i++){
                    awsGroupControls[i].disabled = containerProvider!="@core.models.ContainerProvider.AWS_S3";
                }
            };

            containerProviderChange();
    </script>
}

