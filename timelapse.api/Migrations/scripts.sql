CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    migration_id character varying(150) NOT NULL,
    product_version character varying(32) NOT NULL,
    CONSTRAINT pk___ef_migrations_history PRIMARY KEY (migration_id)
);

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20220117022054_InitialCreate') THEN
    CREATE TABLE devices (
        id integer GENERATED BY DEFAULT AS IDENTITY,
        name text NOT NULL,
        description text NOT NULL,
        CONSTRAINT pk_devices PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20220117022054_InitialCreate') THEN
    INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
    VALUES ('20220117022054_InitialCreate', '6.0.1');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20220122101817_Telemetry') THEN
    CREATE TABLE telemetry (
        id integer GENERATED BY DEFAULT AS IDENTITY,
        device_id integer NOT NULL,
        timestamp timestamp with time zone NOT NULL,
        temperature_c integer NOT NULL,
        battery_percent integer NOT NULL,
        disk_space_free integer NOT NULL,
        uptime_seconds integer NOT NULL,
        CONSTRAINT pk_telemetry PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20220122101817_Telemetry') THEN
    INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
    VALUES ('20220122101817_Telemetry', '6.0.1');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20220126041340_TelemetryRelation') THEN
    CREATE INDEX ix_telemetry_device_id ON telemetry (device_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20220126041340_TelemetryRelation') THEN
    ALTER TABLE telemetry ADD CONSTRAINT fk_telemetry_devices_device_id FOREIGN KEY (device_id) REFERENCES devices (id) ON DELETE CASCADE;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20220126041340_TelemetryRelation') THEN
    INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
    VALUES ('20220126041340_TelemetryRelation', '6.0.1');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20220128042248_Imagery') THEN
    CREATE TABLE images (
        id integer GENERATED BY DEFAULT AS IDENTITY,
        timestamp timestamp with time zone NOT NULL,
        blob_uri text NOT NULL,
        device_id integer NOT NULL,
        CONSTRAINT pk_images PRIMARY KEY (id),
        CONSTRAINT fk_images_devices_device_id FOREIGN KEY (device_id) REFERENCES devices (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20220128042248_Imagery') THEN
    CREATE INDEX ix_images_device_id ON images (device_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20220128042248_Imagery') THEN
    INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
    VALUES ('20220128042248_Imagery', '6.0.1');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20220129080604_TelemetryFieldTweaks') THEN
    ALTER TABLE telemetry ALTER COLUMN uptime_seconds DROP NOT NULL;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20220129080604_TelemetryFieldTweaks') THEN
    ALTER TABLE telemetry ALTER COLUMN disk_space_free DROP NOT NULL;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20220129080604_TelemetryFieldTweaks') THEN
    ALTER TABLE telemetry ADD status text NOT NULL DEFAULT '';
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20220129080604_TelemetryFieldTweaks') THEN
    INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
    VALUES ('20220129080604_TelemetryFieldTweaks', '6.0.1');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20220129080854_TelemetryFieldTweaks2') THEN
    ALTER TABLE telemetry ALTER COLUMN status DROP NOT NULL;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20220129080854_TelemetryFieldTweaks2') THEN
    INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
    VALUES ('20220129080854_TelemetryFieldTweaks2', '6.0.1');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20220208025516_UnregisteredDevices') THEN
    ALTER TABLE devices ADD serial_number text NOT NULL DEFAULT '';
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20220208025516_UnregisteredDevices') THEN
    CREATE TABLE unregistered_devices (
        id integer GENERATED BY DEFAULT AS IDENTITY,
        serial_number text NOT NULL,
        CONSTRAINT pk_unregistered_devices PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20220208025516_UnregisteredDevices') THEN
    INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
    VALUES ('20220208025516_UnregisteredDevices', '6.0.1');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20220220221159_Identity') THEN
    CREATE TABLE "AspNetRoles" (
        id text NOT NULL,
        name character varying(256) NULL,
        normalized_name character varying(256) NULL,
        concurrency_stamp text NULL,
        CONSTRAINT pk_asp_net_roles PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20220220221159_Identity') THEN
    CREATE TABLE "AspNetUsers" (
        id text NOT NULL,
        user_name character varying(256) NULL,
        normalized_user_name character varying(256) NULL,
        email character varying(256) NULL,
        normalized_email character varying(256) NULL,
        email_confirmed boolean NOT NULL,
        password_hash text NULL,
        security_stamp text NULL,
        concurrency_stamp text NULL,
        phone_number text NULL,
        phone_number_confirmed boolean NOT NULL,
        two_factor_enabled boolean NOT NULL,
        lockout_end timestamp with time zone NULL,
        lockout_enabled boolean NOT NULL,
        access_failed_count integer NOT NULL,
        CONSTRAINT pk_asp_net_users PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20220220221159_Identity') THEN
    CREATE TABLE "AspNetRoleClaims" (
        id integer GENERATED BY DEFAULT AS IDENTITY,
        role_id text NOT NULL,
        claim_type text NULL,
        claim_value text NULL,
        CONSTRAINT pk_asp_net_role_claims PRIMARY KEY (id),
        CONSTRAINT fk_asp_net_role_claims_asp_net_roles_role_id FOREIGN KEY (role_id) REFERENCES "AspNetRoles" (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20220220221159_Identity') THEN
    CREATE TABLE "AspNetUserClaims" (
        id integer GENERATED BY DEFAULT AS IDENTITY,
        user_id text NOT NULL,
        claim_type text NULL,
        claim_value text NULL,
        CONSTRAINT pk_asp_net_user_claims PRIMARY KEY (id),
        CONSTRAINT fk_asp_net_user_claims_asp_net_users_user_id FOREIGN KEY (user_id) REFERENCES "AspNetUsers" (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20220220221159_Identity') THEN
    CREATE TABLE "AspNetUserLogins" (
        login_provider character varying(128) NOT NULL,
        provider_key character varying(128) NOT NULL,
        provider_display_name text NULL,
        user_id text NOT NULL,
        CONSTRAINT pk_asp_net_user_logins PRIMARY KEY (login_provider, provider_key),
        CONSTRAINT fk_asp_net_user_logins_asp_net_users_user_id FOREIGN KEY (user_id) REFERENCES "AspNetUsers" (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20220220221159_Identity') THEN
    CREATE TABLE "AspNetUserRoles" (
        user_id text NOT NULL,
        role_id text NOT NULL,
        CONSTRAINT pk_asp_net_user_roles PRIMARY KEY (user_id, role_id),
        CONSTRAINT fk_asp_net_user_roles_asp_net_roles_role_id FOREIGN KEY (role_id) REFERENCES "AspNetRoles" (id) ON DELETE CASCADE,
        CONSTRAINT fk_asp_net_user_roles_asp_net_users_user_id FOREIGN KEY (user_id) REFERENCES "AspNetUsers" (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20220220221159_Identity') THEN
    CREATE TABLE "AspNetUserTokens" (
        user_id text NOT NULL,
        login_provider character varying(128) NOT NULL,
        name character varying(128) NOT NULL,
        value text NULL,
        CONSTRAINT pk_asp_net_user_tokens PRIMARY KEY (user_id, login_provider, name),
        CONSTRAINT fk_asp_net_user_tokens_asp_net_users_user_id FOREIGN KEY (user_id) REFERENCES "AspNetUsers" (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20220220221159_Identity') THEN
    CREATE INDEX ix_asp_net_role_claims_role_id ON "AspNetRoleClaims" (role_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20220220221159_Identity') THEN
    CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" (normalized_name);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20220220221159_Identity') THEN
    CREATE INDEX ix_asp_net_user_claims_user_id ON "AspNetUserClaims" (user_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20220220221159_Identity') THEN
    CREATE INDEX ix_asp_net_user_logins_user_id ON "AspNetUserLogins" (user_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20220220221159_Identity') THEN
    CREATE INDEX ix_asp_net_user_roles_role_id ON "AspNetUserRoles" (role_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20220220221159_Identity') THEN
    CREATE INDEX "EmailIndex" ON "AspNetUsers" (normalized_email);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20220220221159_Identity') THEN
    CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" (normalized_user_name);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20220220221159_Identity') THEN
    INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
    VALUES ('20220220221159_Identity', '6.0.1');
    END IF;
END $EF$;
COMMIT;

